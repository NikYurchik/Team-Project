I. В моей реализации:
    1. Вся "main"-логика реализовна в классе Bot_assistant, а не отдельными процедурами.
    2. Сохраняется и восстанавливается полностью структура класса AddressBook, а не только его содержимое.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад, их упрощенный синтаксис и ссылки на процедуры обработки хранятся в отдельном словаре.
    4. Может и избыточно, но все процедуры работы с записями AddressBook могут оперировать как с именем контакта,
       так и с соответствующим классом (Name, Phone, Record).

II. В релизации Максима:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.

II. В релизации Антона:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.
       Сначала выводится список допустимых команд, затем пользователю предлается выбрать команду (ввести код команды)
       и затем запрашивается собственно параметры соответствующей команды.
    4. Проверяет правильность введеного имени (от 2 символов и тольки буквы).
    5. Проверяет правильность введеного номера телефона (либо только 10 цифр, либо 12 цифр, возможно с лидирующим +).

IV. ---В релизации Павла:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд привязан к конкретным командам.

V. В релизации Ивана:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.
       Команды завершения работы вынесены в отдельный список.
    

Есть предложения.
1. Кроме адреса и eMail добавить ввод полного ФИО (это расширение функционала). Имя контакта будет уникальным ником.


Касатально реализации пунктов ТЗ:
1. [Антон] Дополнить функционал для адреса, eMail и ФИО, добавив новые функции в класс Record.
           Добавить необходимы функции в классс AddressBook:
           - добавление/изменение адреса;
           - добавление/изменения eMail;
           - добавление/изменения ФИО.
           Добавить в функции вывода записей контактов новые реквизиты.

2. [Иван] Добавить функцию вывода списка контактов, день рождения которых будет от завтрашнего дня до указанного в параметре фнкции.
          Например, параметр =7 - выдать список контактов, у которых день рождения в ближайшие 7 дней.

3. [Антон] Добавить начальные проверки номера телефона и eMail.

4. [Антон] В моей реализации уже есть сквозной поиск, возможно его нужно как-то расширить.
           Сквозной поиск подстроки (фрагмета строки):
           - перебираются все записи контактов;
           - по каждой записи формируется строка содержащая все реквизиты контакта;
           - если в сформированной строке содержится искомый фрагмент, то строка сохраняется для вывода.

5. [Иван] См. п.2

6-10. [Павел] Это разработка нового функционала. Соответственно, добавить в список допустимых команд новые команды.
              Реализовать отдельным классом в отдельном модуле.

11. [Юрий] Есть готовая реализация. Оформить отдельным модулем проекта и добавить соответствующую команду в список команд.

*. [Максим] Продумать реализацию. Если есть какой-то готовый вариант рассмотреть возможность встраивания его в парсер команд.

**. [Юрий] Расширить функционал парсера команд, чтобы была возможность как выполнить любую операцию одной командой с параметрами,
           так и с интерактивным запросом параметров команды.


Главный вопрос!
Какую из наших реализаций последнего ДЗ взять в качестве базовой?
Т.к. вся дальнейшая разработка будет вестись уже в ней.
Предлагаю взять мою.



[Павел] Заметки:
1. Сохранять дату создания/редактирования заметки.
2. Сортировка по дате создания/редактирования при выводе или при сохранении. ??? Продумать варианты ???
3. Редактирование:
   - выбор заметки по тегу;
   - если 1 заметка, то сразу ее редактируем;
   - если несколько, то выводим предварительный список: п.н. записи, дата создания/редактирования и ~50 символов.
     пользователь вводит п.н. заметки и она выводится на редактирование.
   
   [Павел и Юрий]
   Опционально - поискать вариант вывода редактируемой заметки на экран консоли с размещением её в буфере ввода (input).
   Если такая возможность есть и она не сложна в реализации, то добавить и её.
   Это будет большое облегчение для клиента.
   Можно будет реализовать подобное редактирование любого реквизита адресной книги.

Опционально - добавить команды настройки бота. Например выводить/не выводить список контактов, у которых ДР сегодня/завтра.
