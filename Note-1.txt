I. В моей реализации:
    1. Вся "main"-логика реализовна в классе Bot_assistant, а не отдельными процедурами.
    2. Сохраняется и восстанавливается полностью структура класса AddressBook, а не только его содержимое.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад, их упрощенный синтаксис и ссылки на процедуры обработки хранятся в отдельном словаре.
    4. Может и избыточно, но все процедуры работы с записями AddressBook могут оперировать как с именем контакта,
       так и с соответствующим классом (Name, Phone, Record).

II. В релизации Максима:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.

II. В релизации Антона:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.
       Сначала выводится список допустимых команд, затем пользователю предлается выбрать команду (ввести код команды)
       и затем запрашивается собственно параметры соответствующей команды.
    4. Проверяет правильность введеного имени (от 2 символов и тольки буквы).
    5. Проверяет правильность введеного номера телефона (либо только 10 цифр, либо 12 цифр, возможно с лидирующим +).

IV. В релизации Павла:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд привязан к конкретным командам.

V. В релизации Ивана:
    1. Вся "main"-логика реализовна отдельными процедурами.
    2. Сохраняется и восстанавливается только содержимое класса AddressBook.
    3. Парсер команд не привязан к конкретным командам.
       Список допустимых комад и ссылки на процедуры обработки хранятся в отдельном словаре.
       Команды завершения работы вынесены в отдельный список.
    

Есть предложения.
1. Кроме адреса и eMail добавить ввод полного ФИО (это расширение функционала). Имя контакта будет уникальным ником.


Касатально реализации пунктов ТЗ:
1. Дополнить функционал для адреса, eMail и ФИО, добавив новые функции.
2. Добавить функцию вывода списка контактов, день рождения которых будет через указанное количество дней
   или в диапазоне указанного колиства дней (2 числа "от" и "до").
3. Добавить нчальные проверки номера телефона и eMail.
4. В моей реализации уже есть сквозной поиск, возможно его нужно как-то расширить.
5. См. п.2
6-10. Это разработка нового функционала. Соответственно, добавить в список допустимых команд новые команды.
      Добавить возможность в качестве тега указывать имя контакта (ник), чтобы по нему была возможность выводить заметки.
11. Есть готовая реализация. Оформить отдельным модулем проекта и добавить соответствующую команду в список команд.
*. Продумать реализацию. Если есть какой-то готовый вариант рассмотреть возможность встраивания его в парсер команд.
**. Расширить функционал парсера команд, чтобы была возможность как выполнить любую операцию одной командой,
    так и с интерактивным запросом параметров коман.


Главный вопрос!
Какую из наших реализаций последнего ДЗ взять в качестве базовой?
Т.к. вся дальнейшая разработка будет вестись уже в ней.
